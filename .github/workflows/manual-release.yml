on:
  workflow_dispatch: # Allow manual triggering of the workflow

name: Manual Release

jobs:

  determine-next-tag:
    name: Determine Next Tag
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure all tags are fetched

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Calculate next tag
        id: calculate_next_tag
        run: |
          IFS='.' read -r major minor patch <<< "${latest_tag#v}"
          next_patch=$((patch + 1))
          next_tag="v${major}.${minor}.${next_patch}"
          echo "Next tag: $next_tag"
          echo "NEXT_TAG=$next_tag" >> $GITHUB_ENV
    outputs:
      next_tag: ${{ env.NEXT_TAG }}

  create-new-tag:
    name: Create New Tag
    runs-on: ubuntu-latest
    needs: determine-next-tag

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure all tags are fetched

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ needs.determine-next-tag.outputs.next_tag }} \
            --title "Raspberry Pi Server UI release ${{ needs.determine-next-tag.outputs.next_tag }}" \
            --latest

      - name: Create and push new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${{ needs.determine-next-tag.outputs.next_tag }}
          git push origin ${{ needs.determine-next-tag.outputs.next_tag }}